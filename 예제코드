// HC-SR04 초음파 거리센서 디버깅 코드
// Trig 2번, Echo 3번 핀 사용

#define TRIG_PIN 2
#define ECHO_PIN 3

void setup() {
  // 시리얼 통신 시작
  Serial.begin(9600);
  
  // 핀 모드 설정
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  
  Serial.println("=================================");
  Serial.println("HC-SR04 거리센서 디버깅 시작");
  Serial.println("Trig: 2번 핀, Echo: 3번 핀");
  Serial.println("=================================");
  Serial.println();
  
  delay(1000);
}

void loop() {
  // 거리 측정
  long duration;
  float distance;
  
  // Trig 핀 초기화
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  
  // Trig 핀에 10us 펄스 발생
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);
  
  // Echo 핀에서 펄스 지속시간 측정
  duration = pulseIn(ECHO_PIN, HIGH, 30000); // 타임아웃 30ms
  
  // 거리 계산 (음속: 340m/s = 0.034cm/us)
  // 왕복 시간이므로 2로 나눔
  distance = duration * 0.034 / 2;
  
  // 디버깅 정보 출력
  Serial.print("[ 측정 시간: ");
  Serial.print(millis());
  Serial.println(" ms ]");
  
  Serial.print("펄스 지속시간: ");
  Serial.print(duration);
  Serial.println(" us");
  
  Serial.print("거리: ");
  Serial.print(distance);
  Serial.println(" cm");
  
  // 측정 상태 체크
  if (duration == 0) {
    Serial.println("⚠️ 경고: 응답 없음 (센서 연결 확인 필요)");
  } else if (distance > 400) {
    Serial.println("⚠️ 경고: 측정 범위 초과 (>400cm)");
  } else if (distance < 2) {
    Serial.println("⚠️ 경고: 너무 가까움 (<2cm)");
  } else {
    Serial.println("✓ 정상 측정");
  }
  
  Serial.println("---------------------------------");
  Serial.println();
  
  delay(500); // 0.5초 간격으로 측정
}
